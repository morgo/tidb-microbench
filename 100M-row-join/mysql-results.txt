CONNECTION="root@tcp(localhost:5642)/test" ./bench/bench


MySQL can index scan on a (efficient, covering index) and then assuming most rows are null, only a small subset need to join on B.
The join is by primary key.  The index (a) is in memory, and b is likely in memory.

Using MySQL 5.6.24
3 Million Rows in initial test.. will ramp up to 100M rows.

mysql> SELECT count(*) from a;
+----------+
| count(*) |
+----------+
|  3432852 |
+----------+
1 row in set (0.66 sec)

mysql> select count(*) from b;
+----------+
| count(*) |
+----------+
|  2645280 |
+----------+
1 row in set (0.66 sec)

mysql> select  count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (0.88 sec)

mysql> explain select  count(*) from a inner join b on a.b_id = b.id;
+----+-------------+-------+--------+---------------+---------+---------+-------------+---------+--------------------------+
| id | select_type | table | type   | possible_keys | key     | key_len | ref         | rows    | Extra                    |
+----+-------------+-------+--------+---------------+---------+---------+-------------+---------+--------------------------+
|  1 | SIMPLE      | a     | index  | b_id          | b_id    | 101     | NULL        | 3508325 | Using where; Using index |
|  1 | SIMPLE      | b     | eq_ref | PRIMARY       | PRIMARY | 96      | test.a.b_id |       1 | Using where; Using index |
+----+-------------+-------+--------+---------------+---------+---------+-------------+---------+--------------------------+
2 rows in set (0.00 sec)

** Second test: ~50M rows **

- Loaded the tables to 50 million rows (50% of planned size).
- DROPPED and recreated b_id index to give MySQL the max fill factor, etc (shouldn't matter much but wanted to do so)
- Waited for dirty pages to flush and insert buffer to merge.
- ANALYZE TABLES

Repeated the intended query a few times, and also an alternative which should be approximately the same if most values of a.b_id are NULL.  Could not quite get expected query time (1-3 seconds), might be because key-lengths for a.id is shorter than full-length UUID? (not an easy change to test: will affect all secondary keys).  Confirmed that queries were all in memory (iostat showed reads for first first queries, but not after explain..).

mysql [localhost] {msandbox} (test) > SELECT count(*) FROM a;
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (17.69 sec)

mysql [localhost] {msandbox} (test) > SELECT count(*) FROM b;
+----------+
| count(*) |
+----------+
| 41306448 |
+----------+
1 row in set (14.44 sec)

mysql [localhost] {msandbox} (test) >
mysql [localhost] {msandbox} (test) > EXPLAIN select count(*) from a inner join b on a.b_id = b.id;
+----+-------------+-------+--------+---------------+---------+---------+-------------+----------+--------------------------+
| id | select_type | table | type   | possible_keys | key     | key_len | ref         | rows     | Extra                    |
+----+-------------+-------+--------+---------------+---------+---------+-------------+----------+--------------------------+
|  1 | SIMPLE      | a     | index  | b_id          | b_id    | 101     | NULL        | 41356464 | Using where; Using index |
|  1 | SIMPLE      | b     | eq_ref | PRIMARY       | PRIMARY | 96      | test.a.b_id |        1 | Using where; Using index |
+----+-------------+-------+--------+---------------+---------+---------+-------------+----------+--------------------------+
2 rows in set (0.00 sec)

mysql [localhost] {msandbox} (test) > EXPLAIN select count(*) from a force index (b_id);
+----+-------------+-------+-------+---------------+------+---------+------+----------+-------------+
| id | select_type | table | type  | possible_keys | key  | key_len | ref  | rows     | Extra       |
+----+-------------+-------+-------+---------------+------+---------+------+----------+-------------+
|  1 | SIMPLE      | a     | index | NULL          | b_id | 101     | NULL | 41356464 | Using index |
+----+-------------+-------+-------+---------------+------+---------+------+----------+-------------+
1 row in set (0.00 sec)

mysql [localhost] {msandbox} (test) >
mysql [localhost] {msandbox} (test) > select count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (8.93 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (8.81 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (8.50 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (8.41 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a inner join b on a.b_id = b.id;
+----------+
| count(*) |
+----------+
|        0 |
+----------+
1 row in set (8.41 sec)

mysql [localhost] {msandbox} (test) >
mysql [localhost] {msandbox} (test) > select count(*) from a force index (b_id);
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (8.10 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a force index (b_id);
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (8.11 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a force index (b_id);
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (8.16 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a force index (b_id);
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (8.13 sec)

mysql [localhost] {msandbox} (test) > select count(*) from a force index (b_id);
+----------+
| count(*) |
+----------+
| 49845492 |
+----------+
1 row in set (8.18 sec)
